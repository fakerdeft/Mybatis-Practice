<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
<!-- namespace: 해당 mapper파일의 별칭 -->

<!-- 
	DML문일 경우
	<insert id="sql문의 아이디" parameterType="전달받은 데이터타입(풀클래스명) 혹은 별칭">
		원하는 쿼리문 작성
	</insert>
	<update></update>
	<delete></delete>
	-parameterType: 전달받은 데이터가 없다면 생략 가능
	
	SELECT 문일 경우
	<select id="sql문의 아이디" parameterType="전달받은 데이터타입(풀클래스명)" 혹은 별칭
				resultType="조회결과 반환타입" 또는 resultMap="조회된 결과를 뽑아서 매핑할 resultMap의 id">
				
	</select>
	
	**resultMap: 마이바티스의 핵심 기능중 하나 ResultSet으로 부터 조회된 컬럼값을 뽑아
				내가 지정한 VO 객체에 각 필드에 담아주는(매핑) 역할을 한다.
	<resultMap id="식별자" type="조회된 결과를 담아 반환하고자 하는 VO 객체의 풀 클래스명 또는 별칭">
		<result column="조회결과를 뽑고자하는 DB컬럼명" property="해당 결과를 담고자 하는 VO필드명"/>
		<result column="조회결과를 뽑고자하는 DB컬럼명" property="해당 결과를 담고자 하는 VO필드명"/>
		...
	</resultMap>
 -->
 	<resultMap type="member" id="memberResult">
 		<result column="USER_NO" property="userNo"/>
 		<result column="USER_ID" property="userId"/>
 		<result column="USER_PWD" property="userPwd"/>
 		<result column="USER_NAME" property="userName"/>
 		<result column="EMAIL" property="email"/>
 		<result column="BIRTHDAY" property="birthday"/>
 		<result column="GENDER" property="gender"/>
 		<result column="PHONE" property="phone"/>
 		<result column="ADDRESS" property="address"/>
 		<result column="ENROLL_DATE" property="enrollDate"/>
 		<result column="MODIFY_DATE" property="modifyDate"/>
 		<result column="STATUS" property="status"/>
 	</resultMap>
 	
 	<select id="selectMember" resultMap="memberResult" parameterType="member">
 		SELECT *
 		FROM MEMBER
 		WHERE USER_ID = #{userId}
 		AND USER_PWD = #{userPwd}
 		AND STATUS = 'Y'
 	</select>
 
<!--  	<insert id="insertMember" parameterType="com.kh.mybatis.member.model.vo.Member"> -->
 <!-- 전달받은 객체의 필드명을 기존 위치홀더 부분에 넣어준다. -->
 	<insert id="insertMember" parameterType="member">
		INSERT INTO MEMBER
					(USER_NO
					,USER_ID
					,USER_PWD
					,USER_NAME
					,EMAIL
					,BIRTHDAY
					,GENDER
					,PHONE
					,ADDRESS
					) 
					VALUES
					(SEQ_UNO.NEXTVAL
					,#{userId}
					,#{userPwd}
					,#{userName}
					,#{email}
					,#{birthday}
					,#{gender}
					,#{phone}
					,#{address}
					) 	
 	</insert>
 
</mapper>
















